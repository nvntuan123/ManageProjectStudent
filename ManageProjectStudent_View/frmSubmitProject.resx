<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton5.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>